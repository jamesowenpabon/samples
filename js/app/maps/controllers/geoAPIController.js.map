{"version":3,"sources":["controllers/geoAPIController-src.js"],"names":["define","sampleApp","register","controller","$scope","geolocateSvc","gl","this","$on","tracker","mapUrl","getCurrentGPS","then","setCoords","onerror","mapsData","mapsdata","obj","uri","center","heading","markers","zoom","size","mapType","streetLocation","visible","setPositionData","pos","callback","gpsLocationData","lat","coords","latitude","long","longitude","latlon","accuracy","altitude","speed","populateObjects","roadMap","color","label","position","me","streetView","satelliteMap","defaultMap","generateMap","constructMapUrl","arg","isNaN","mapUri","maptype","mapLocation","mapCenter","mapHeading","mapZoom","mapSize","mapMarkers","mapVisible","i","length","markerCoords","watchMap","watchID","navigator","geolocation","watchPosition","$apply","cords","altitudeAccuracy","geoOption","clearWatch","changeMap","enableHighAccuracy","err","errorMessage","message","console","log"],"mappings":"AAEAA,QAAQ,OAAQ,SAASC,WAEzBA,UAAUC,SAASC,WAAW,SAAU,SAASC,OAAQC,cACxD,GAAIC,IAAKC,IAENH,QAAOI,IAAI,qBAAsB,WAC7BF,GAAGG,SAAU,EACbH,GAAGI,OAAS,uBACZL,aAAaM,gBAAgBC,KAAKN,GAAGO,UAAUP,GAAGQ,WAItDR,GAAGS,SAAW,WACV,QAASC,UAASC,KACdV,KAAKW,IAAMD,IAAIC,IACfX,KAAKY,OAASF,IAAIE,OAClBZ,KAAKa,QAAUH,IAAIG,QACnBb,KAAKc,QAAUJ,IAAII,QACnBd,KAAKe,KAAOL,IAAIK,KAChBf,KAAKgB,KAAON,IAAIM,KAChBhB,KAAKiB,QAAUP,IAAIO,QACnBjB,KAAKkB,eAAiBR,IAAIQ,eAC1BlB,KAAKmB,QAAUT,IAAIS,QAE1B,MAAOV,aAIRV,GAAGqB,gBAAkB,SAASC,IAAKC,UAC/BvB,GAAGwB,iBACCC,IAAQH,IAAII,OAAOC,SACnBC,OAASN,IAAII,OAAOG,UACpBC,OAAWR,IAAII,OAAOC,SAAW,IAAML,IAAII,OAAOG,UAClDE,SAAaT,IAAII,OAAOK,SACxBC,SAAaV,IAAII,OAAOM,SACxBlB,QAAYQ,IAAII,OAAOZ,QACvBmB,MAAUX,IAAII,OAAOO,OAEzBV,YAIJvB,GAAGkC,gBAAkB,SAASX,UACzBvB,GAAGmC,QAAU,GAAInC,IAAGS,UACjBG,IAAQ,iDACRC,OAAW,MACXC,QAAY,GACZC,UACKqB,MAAU,OAAOC,MAAU,IAAIC,SAAa,QAEjDtB,KAAS,KACTC,KAAQ,UACRC,QAAY,GACZC,eAAmB,GACnBC,QAAY,KAGhBpB,GAAGuC,GAAK,GAAIvC,IAAGS,UACXG,IAAQ,iDACRC,OAAW,GACXC,QAAY,GACZC,UACKqB,MAAU,OAAOC,MAAU,IAAIC,SAAa,QAC5CF,MAAU,MAAMC,MAAU,IAAIC,SAAa,mBAEhDtB,KAAS,GACTC,KAAQ,UACRC,QAAY,GACZC,eAAmB,GACnBC,QAAY,mBAGhBpB,GAAGwC,WAAa,GAAIxC,IAAGS,UACnBG,IAAQ,kDACRC,OAAW,GACXC,QAAY,MACZC,WACAC,KAAS,GACTC,KAAQ,UACRC,QAAY,GACZC,eAAmB,MACnBC,QAAY,KAGhBpB,GAAGyC,aAAe,GAAIzC,IAAGS,UACrBG,IAAQ,iDACRC,OAAW,MACXC,QAAY,GACZC,UACKqB,MAAU,OAAOC,MAAU,IAAIC,SAAa,QAEjDtB,KAAS,KACTC,KAAQ,UACRC,QAAY,YACZC,eAAmB,GACnBC,QAAY,KAGhBpB,GAAG0C,WAAa1C,GAAGmC,QACnBZ,YAGJvB,GAAG2C,YAAc,WACb3C,GAAGS,SAAWT,GAAG0C,WACjB1C,GAAG4C,mBAGP5C,GAAG4C,gBAAkB,SAASC,MAE3BC,MAAM9C,GAAGwB,gBAAgBV,UAA0C,MAA9Bd,GAAGwB,gBAAgBV,WACvDd,GAAGwB,gBAAgBV,QAAU,GAoBjC,KAAK,GAjBDiC,QAAgB/C,GAAGS,SAASG,IAAM,IAClCoC,QAAgB,WAAWhD,GAAGS,SAASS,QAAQ,IAC/C+B,YAA8C,OAA9BjD,GAAGS,SAASU,eACV,YAAYnB,GAAGwB,gBAAgBM,OAAO,IACtC,YAAY9B,GAAGS,SAASU,eAAe,IACzD+B,UAAsC,OAAtBlD,GAAGS,SAASI,OACV,UAAUb,GAAGwB,gBAAgBM,OAAO,IACpC,UAAU9B,GAAGS,SAASI,OAAO,IAC/CsC,WAAuC,OAAvBnD,GAAGS,SAASK,QACV,WAAWd,GAAGwB,gBAAgBV,QAAQ,IACtC,WAAWd,GAAGS,SAASK,QAAQ,IACjDsC,QAAgB,QAAQpD,GAAGS,SAASO,KAAK,IACzCqC,QAAgB,QAAQrD,GAAGS,SAASQ,KAAK,IACzCqC,WAAgB,GAEhBC,WAAgB,WAAWvD,GAAGS,SAASW,QAElCoC,EAAE,EAAEA,EAAExD,GAAGS,SAASM,QAAQ0C,OAAQD,IAAM,CACjD,GAAIE,cAAmD,OAAnC1D,GAAGS,SAASM,QAAQyC,GAAGlB,SACrBtC,GAAGwB,gBAAgBM,OACnB9B,GAAGS,SAASM,QAAQyC,GAAGlB,QAC7CgB,aAAgB,iBAAiBtD,GAAGS,SAASM,QAAQyC,GAAGpB,MACxC,UAAUpC,GAAGS,SAASM,QAAQyC,GAAGnB,MAAM,IAAIqB,aAAa,IAGxE1D,GAAGI,OAAS2C,OACAC,QACAC,YACAC,UACAC,WACAG,WACAD,QACAD,QAEAG,YAGZvD,GAAG2D,SAAW,SAASd,KACZ,SAAPA,IACJ7C,GAAG4D,QAAUC,UAAUC,YAAYC,cAAc,SAASzB,UACtDxC,OAAOkE,OAAO,WACdlE,OAAOwC,SAAWA,QAClB,IAAI2B,OAAQnE,OAAOwC,SAASZ,MAC5B1B,IAAGwB,gBAAgBC,IAAMwC,MAAMtC,SAC/B3B,GAAGwB,gBAAHxB,QAA0BiE,MAAMpC,UAChC7B,GAAGwB,gBAAgBM,OAAS9B,GAAGwB,gBAAgBC,IAAM,IAAMzB,GAAGwB,gBAAHxB,QAC3DA,GAAGwB,gBAAgBO,SAAWkC,MAAMlC,SACpC/B,GAAGwB,gBAAgBQ,SAAWiC,MAAMjC,SACpChC,GAAGwB,gBAAgB0C,iBAAmBD,MAAMC,iBAC5ClE,GAAGwB,gBAAgBV,QAAUmD,MAAMnD,QACnCd,GAAGwB,gBAAgBS,MAAQgC,MAAMhC,MACjCjC,GAAG4C,qBAEJ5C,GAAGQ,QAASR,GAAGmE,WACA,QAAPtB,KACXgB,UAAUC,YAAYM,WAAWpE,GAAG4D,UAIpC5D,GAAGO,UAAY,SAAUe,KACrBtB,GAAGqB,gBAAgBC,IAAK,WACpBtB,GAAGkC,gBAAgB,WACflC,GAAG2C,mBAKf3C,GAAGqE,UAAY,SAAS1D,KACpBX,GAAGS,SAAWE,IACdX,GAAG4C,mBAGP5C,GAAGmE,WACCG,oBAAoB,GAGxBtE,GAAGQ,QAAU,SAAS+D,KAClBvE,GAAGwE,aAAeD,IAAIE,SAG1BC,QAAQC,IAAI,iCACfD,QAAQC,IAAI3E","file":"controllers/geoAPIController.js","sourcesContent":["//Geolocate API Controller\n\ndefine(['app'], function(sampleApp){\n\nsampleApp.register.controller('geoAPI', function($scope, geolocateSvc)\t{\n\tvar gl = this;\n\n    $scope.$on('$viewContentLoaded', function() {\n        gl.tracker = true;\n        gl.mapUrl = \"/images/loading1.gif\";\n        geolocateSvc.getCurrentGPS().then(gl.setCoords,gl.onerror);\n    });\n    \n    // Map Object Class \n    gl.mapsData = (function()   {\n        function mapsdata(obj){\n            this.uri = obj.uri;\n            this.center = obj.center;\n            this.heading = obj.heading;\n            this.markers = obj.markers;\n            this.zoom = obj.zoom;\n            this.size = obj.size;\n            this.mapType = obj.mapType;\n            this.streetLocation = obj.streetLocation;\n            this.visible = obj.visible;\n        }\n    \treturn mapsdata;\n    })();\n\n    // Populate GPS Data Object\n    gl.setPositionData = function(pos, callback) {\n        gl.gpsLocationData = {\n            'lat' : pos.coords.latitude,\n            'long' : pos.coords.longitude,\n            'latlon' : pos.coords.latitude + \",\" + pos.coords.longitude,\n            'accuracy' : pos.coords.accuracy,\n            'altitude' : pos.coords.altitude,\n            'heading' : pos.coords.heading,\n            'speed' : pos.coords.speed\n        };\n        callback();\n    };\n\n    //Map Object Constructors\n    gl.populateObjects = function(callback){\n         gl.roadMap = new gl.mapsData({\n            'uri' : 'https://maps.googleapis.com/maps/api/staticmap',\n            'center' : 'gps',\n            'heading' : '',\n            'markers' : [\n                {'color' : 'blue','label' : 'U','position' : 'gps'}\n            ],\n            'zoom' : '17',\n            'size' :'400x300',\n            'mapType' : '',\n            'streetLocation' : '',\n            'visible' : ''\n        });\n        \n        gl.me = new gl.mapsData({\n            'uri' : 'https://maps.googleapis.com/maps/api/staticmap',\n            'center' : '',\n            'heading' : '',\n            'markers' : [\n                {'color' : 'blue','label' : 'U','position' : 'gps'},\n                {'color' : 'red','label' : 'M','position' : 'stony+point,NY'}\n            ],\n            'zoom' : '',\n            'size' :'400x300',\n            'mapType' : '',\n            'streetLocation' : '',\n            'visible' : 'stony+point,NY'\n        });\n        \n        gl.streetView = new gl.mapsData({\n            'uri' : 'https://maps.googleapis.com/maps/api/streetview',\n            'center' : '',\n            'heading' : 'gps',\n            'markers' : [],\n            'zoom' : '',\n            'size' :'400x300',\n            'mapType' : '',\n            'streetLocation' : 'gps',\n            'visible' : ''\n        });\n        \n        gl.satelliteMap = new gl.mapsData({\n            'uri' : 'https://maps.googleapis.com/maps/api/staticmap',\n            'center' : 'gps',\n            'heading' : '',\n            'markers' : [\n                {'color' : 'blue','label' : 'U','position' : 'gps'}\n            ],\n            'zoom' : '17',\n            'size' :'400x300',\n            'mapType' : 'satellite',\n            'streetLocation' : '',\n            'visible' : ''\n        });\n        \n        gl.defaultMap = gl.roadMap;\n        callback();\n    };\n    \n    gl.generateMap = function()  {\n        gl.mapsData = gl.defaultMap;\n        gl.constructMapUrl();\n    };\n    \n    gl.constructMapUrl = function(arg) {\n        \n    if(isNaN(gl.gpsLocationData.heading) || gl.gpsLocationData.heading == null) {\n        gl.gpsLocationData.heading = '';    \n    }   \n        \n    var mapUri =        gl.mapsData.uri + \"?\";\n    var maptype =       \"maptype=\"+gl.mapsData.mapType+\"&\";\n    var mapLocation =   gl.mapsData.streetLocation == 'gps' \n                        ? \"location=\"+gl.gpsLocationData.latlon+\"&\"\n                        : \"location=\"+gl.mapsData.streetLocation+\"&\";\n    var mapCenter =     gl.mapsData.center == 'gps' \n                        ? \"center=\"+gl.gpsLocationData.latlon+\"&\"\n                        : \"center=\"+gl.mapsData.center+\"&\";\n    var mapHeading =    gl.mapsData.heading == 'gps' \n                        ? \"heading=\"+gl.gpsLocationData.heading+\"&\"\n                        : \"heading=\"+gl.mapsData.heading+\"&\";\n    var mapZoom =       \"zoom=\"+gl.mapsData.zoom+\"&\";\n    var mapSize =       \"size=\"+gl.mapsData.size+\"&\";\n    var mapMarkers =    \"\";\n    var mapKey =        \"key=AIzaSyDSGrQ3gITM0kVcWYeec2eD3Ph0-C2seWo&\";\n    var mapVisible =    \"visible=\"+gl.mapsData.visible;\n\n    for (var i=0;i<gl.mapsData.markers.length; i++)  {\n    var markerCoords =  gl.mapsData.markers[i].position == 'gps' \n                        ? gl.gpsLocationData.latlon \n                        : gl.mapsData.markers[i].position;\n    mapMarkers +=   \"markers=color:\"+gl.mapsData.markers[i].color+\n                    \"|label:\"+gl.mapsData.markers[i].label+\"|\"+markerCoords+\"&\";\n    }\n    \n    gl.mapUrl = mapUri+\n                maptype+\n                mapLocation+\n                mapCenter+\n                mapHeading+\n                mapMarkers+\n                mapSize+\n                mapZoom+\n                //mapKey;\n                mapVisible;\n    };\n    \n    gl.watchMap = function(arg)    {\n    if (arg == 'start') {\n    gl.watchID = navigator.geolocation.watchPosition(function(position) {\n        $scope.$apply(function(){\n        $scope.position = position;\n        var cords = $scope.position.coords;\n        gl.gpsLocationData.lat = cords.latitude;\n        gl.gpsLocationData.long = cords.longitude;\n        gl.gpsLocationData.latlon = gl.gpsLocationData.lat + \",\" + gl.gpsLocationData.long;\n        gl.gpsLocationData.accuracy = cords.accuracy;\n        gl.gpsLocationData.altitude = cords.altitude;\n        gl.gpsLocationData.altitudeAccuracy = cords.altitudeAccuracy;\n        gl.gpsLocationData.heading = cords.heading;\n        gl.gpsLocationData.speed = cords.speed;\n        gl.constructMapUrl();\n        });\n    }, gl.onerror, gl.geoOption);\n    } else if (arg == 'stop')    {\n    navigator.geolocation.clearWatch(gl.watchID);\n    }\n    };\n\n    gl.setCoords = function (pos)   {\n        gl.setPositionData(pos, function()  {\n            gl.populateObjects(function()   {\n                gl.generateMap();   \n            });    \n        });\n    };\n    \n    gl.changeMap = function(obj)   {\n        gl.mapsData = obj;\n        gl.constructMapUrl();\n    };\n    \n    gl.geoOption = {\n        enableHighAccuracy: true\n    };\n    \n    gl.onerror = function(err)  {\n        gl.errorMessage = err.message;\n    };\n    \n    console.log(\"-----gl Controller Scope-----\");\n\tconsole.log(gl);\n\n});\n});"],"sourceRoot":"/source/"}